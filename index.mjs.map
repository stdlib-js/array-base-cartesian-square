{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from '@stdlib/array-base-resolve-getter';\n\n\n// MAIN //\n\n/**\n* Returns the Cartesian square.\n*\n* @param {Collection} x - input array\n* @returns {Array<Array>} list of ordered tuples comprising the Cartesian product\n*\n* @example\n* var x = [ 1, 2 ];\n*\n* var out = cartesianSquare( x );\n* // returns [ [ 1, 1 ], [ 1, 2 ], [ 2, 1 ], [ 2, 2 ] ]\n*/\nfunction cartesianSquare( x ) {\n\tvar get;\n\tvar out;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tget = resolveGetter( x );\n\tN = x.length;\n\tout = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = get( x, i );\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tout.push( [ v, get( x, j ) ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default cartesianSquare;\n"],"names":["cartesianSquare","x","get","out","N","v","i","j","resolveGetter","length","push"],"mappings":";;oGAuCA,SAASA,EAAiBC,GACzB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKJ,IAHAL,EAAMM,EAAeP,GACrBG,EAAIH,EAAEQ,OACNN,EAAM,GACAG,EAAI,EAAGA,EAAIF,EAAGE,IAEnB,IADAD,EAAIH,EAAKD,EAAGK,GACNC,EAAI,EAAGA,EAAIH,EAAGG,IACnBJ,EAAIO,KAAM,CAAEL,EAAGH,EAAKD,EAAGM,KAGzB,OAAOJ,CACR"}